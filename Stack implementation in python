{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOkDGxI3+FMmJn80tqyaqlP"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":17,"metadata":{"id":"zbMmoaPT4wfg","executionInfo":{"status":"ok","timestamp":1726573804597,"user_tz":720,"elapsed":472,"user":{"displayName":"Bodo","userId":"06887307652885792513"}}},"outputs":[],"source":["class Stack:\n","  def __init__(self):\n","    self.items=[]\n","\n","  def is_empty(self):\n","    return len(self.items) ==0\n","\n","  def push(self,item):\n","    self.items.append(item)\n","\n","  def pop(self):\n","   if not self.is_empty():\n","    return self.items.pop()\n","   else:\n","    raise IndexError('Stack is empty')\n","\n","  def peek(self):\n","   if not self.is_empty():\n","    return self.items[-1]\n","   else:\n","    raise IndexError('Stack is empty')\n","\n","  def size(self):\n","    return len(self.items)\n"]},{"cell_type":"code","source":["stack1=Stack()\n","stack1.push(1)\n","stack1.push(2)\n","stack1.push(3)\n","stack1.push(4)\n","stack1.push(5)\n","\n","stack1.peek()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jnkq4J-tyMQg","executionInfo":{"status":"ok","timestamp":1726573810436,"user_tz":720,"elapsed":495,"user":{"displayName":"Bodo","userId":"06887307652885792513"}},"outputId":"4e981edc-ee33-4a44-ca80-5654ddf365ff"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5"]},"metadata":{},"execution_count":18}]}]}